---
- block:
  - name: Group add 
    become: yes
    group:
      name: "{{ mygroup }}"
      state: present

  - name: User add 
    become: yes
    user:
      name: "{{ main_user_name }}"
      password: "{{ upassword | password_hash('sha512') }}"
      state: present
      shell: /bin/bash
      home: /home/{{ main_user_name }}
      group: "{{ mygroup }}"
#      groups:
#      - sudo


  - name: Creation file sudo.d
    become: yes
    file: 
      path: /etc/sudoers.d/{{ main_user_name }}  
      state: touch
      
  - name: User rights Sudo 
    blockinfile:
      path: /etc/sudoers.d/{{ main_user_name }}
      marker: "# {mark} Sudo User"
      state: present
      insertafter: EOF
      block: |
        {{ main_user_name }} ALL=(ALL) NOPASSWD:/usr/sbin/useradd,/usr/sbin/userdel,/usr/sbin/usermod

  - name: Creation Dir SSH
    become: yes 
    file:
       path: /home/{{ main_user_name }}/.ssh
       mode: 0755
       state: directory
    
  - name: Copy file authorized_keys
    become: yes
    copy:
       src: /home/user/.ssh/authorized_keys
       dest: /home/{{ main_user_name }}/.ssh/authorized_keys
       mode: 0644
       remote_src: yes

  - name: Install Google Authenticator PAM Module
    apt:
      name: libpam-google-authenticator
      update_cache: yes
      cache_valid_time: 86400
      state: present

  - name: Configure PAM Authentication Module
    lineinfile:
      path: /etc/pam.d/sshd
      regexp: '^@include common-auth'
      line: "#@include common-auth"
      state: present
      backrefs: yes
    notify: reload ssh

  - name: Enable Google Autnenticator PAM Module
    blockinfile:
      path: /etc/pam.d/sshd
      marker: "# {mark} Google Authenticator"
      state: present
      insertafter: EOF
      block: |
        auth required pam_google_authenticator.so nullok
    notify: reload ssh

  - name: Configure SSHD Service For 2FA
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^ChallengeResponseAuthentication'
      line: "ChallengeResponseAuthentication yes"
      state: present
      backrefs: yes
    notify: reload ssh

  - name: Enable PAM In SSH
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^UsePAM'
      line: "UsePAM yes"
      state: present
      backrefs: yes
    notify: reload ssh
  
  - name: Configure MFA On SSH Service
    blockinfile:
      path: /etc/ssh/sshd_config
      marker: "# {mark} MFA Configuration"
      state: present
      insertafter: EOF
      block: |
        AuthenticationMethods publickey keyboard-interactive
    notify: reload ssh
  
  - name: "Check if .google_authenticator exists"
    stat:
     path: /home/{{ main_user_name }}/.google_authenticator
    register: check_google

  - name: Generate a timed-based,  reuse, rate-limited (3 logins per 30 seconds) with one concurrently valid code for default user
    command: /usr/bin/google-authenticator -t -f -d --no-confirm  --qr-mode=UTF8 -r 3 -R 30 -w 1 --secret=/home/{{ main_user_name }}/.google_authenticator
    become: yes
    become_user: "{{ main_user_name }}"
    become_method: sudo
    notify: reload ssh
    when: not check_google.stat.exists  # <--HERE

  - name: Print to screen google authenticator details
    command: /usr/bin/cat /home/{{ main_user_name }}/.google_authenticator
    register: details
    become: yes

  - debug: msg="!!!COPY YOUR SECRET KEYS!!!  {{ details.stdout_lines | quote }}"

  - name: Configure MFA On SSH Service
    blockinfile:
      path: /home/{{ main_user_name }}/.bashrc
      marker: "# {mark} Add change qrcode"
      state: present
      insertafter: EOF
      block: |
        /usr/bin/google-authenticator && /usr/bin/sed -i '$ d' /home/$USER/.bashrc

  - name: Generate a timed-based,  reuse, rate-limited (3 logins per 30 seconds) with one concurrently valid code for default user
    command: /usr/bin/sed -i '$ d' /home/$USER/.bashrc
    become: yes
    become_user: "{{ main_user_name }}"
    become_method: sudo

  when:
    - ansible_facts['architecture'] == 'x86_64'
    - ansible_facts['distribution'] == 'Ubuntu'
  become: yes
...
